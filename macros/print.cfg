#####################################################################
# 	Macros
#####################################################################

[gcode_macro HEATSOAK]
gcode:

  {% set BED_TEMP = params.BED_TEMP|default(100)|int %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(100)|int %}
  {% set CHAMBER_TEMP = params.CHAMBER_TEMP|default(60)|int %}
  
  SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN="chamber" TARGET={CHAMBER_TEMP}
  SET_LED LED=case_neopixel RED=1.0 GREEN=0.2 BLUE=0.0
  SET_LED LED=fysetc_mini12864 RED=1.0 GREEN=0.2 BLUE=0
  BEDFANSSLOW
  M106 S255   ; set part fan to cool the ducts
  M140 S{BED_TEMP}  ; set bed to 100
  M104 S{EXTRUDER_TEMP}  ; set nozzle to 180

######################################################################################################################
[gcode_macro CANCEL]
gcode:
  CANCEL_PRINT

######################################################################################################################
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(100)|int %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(245)|int %}
    {% set CHAMBER_TEMP = params.CHAMBER_TEMP|default(35)|int %}
    {% set CONTROLLER_TEMP = params.CONTROLLER_TEMP|default(25)|int %}
    {% set FL_SIZE = params.SIZE|default("0_0_0_0")|string %}
    {% set REFERENCED_TOOLS = params.REFERENCED_TOOLS|default("")|string %}
    {% set INITIAL_TOOL = params.INITIAL_TOOL|default(0)|int %} # default to black color
    
    # get the tools going

    SET_TEMPERATURE_FAN_TARGET temperature_fan="chamber" target={CHAMBER_TEMP}
    SET_TEMPERATURE_FAN_TARGET temperature_fan="controller" target={CONTROLLER_TEMP}
    SET_GCODE_OFFSET Z=0.0
    
    M190 S{BED_TEMP} ; wait for bed temperature before starting to do probes 
    G28
    SMARTQGL
    # Run adaptive bed mesh 
    ADAPTIVE_BED_MESH SIZE={FL_SIZE}  
    
    # BED_MESH_PROFILE LOAD="pei2x"
    
    {% if printer.mmu is defined and printer.mmu.enabled %}
      ######################################################################################################################
      # MMU workflow
      ######################################################################################################################
      M118 ==== MMU enabled =====
      {% if REFERENCED_TOOLS == "!referenced_tools!" %}
      RESPOND MSG="Happy Hare gcode pre-processor is disabled" {% set REFERENCED_TOOLS = INITIAL_TOOL %}
      {% elif REFERENCED_TOOLS == "" %}
      RESPOND MSG="Happy Hare single color print" {% set REFERENCED_TOOLS = INITIAL_TOOL %}
      {% endif %}  
      MMU_CHECK_GATE TOOLS={REFERENCED_TOOLS} 
      MMU_CHANGE_TOOL STANDALONE=1 TOOL={INITIAL_TOOL}  
    {% endif %}

    G28
    SET_LED LED=case_neopixel RED=1 GREEN=0.0 BLUE=0.0
    SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0
        
    M109 S{EXTRUDER_TEMP}       ; wait for extruder final temp
    BEDFANSOFF
    M107 ; turn off fan
    G21 ; set units to millimeters
    G90 ; use absolute coordinates
    M83 ; use relative distances for extrusion
    status_printing    
    M118 Printing...

[gcode_macro PRINT_END]
gcode:
    _RETRACT
    {% set EJECT_FILAMENT = params.EJECT_FILAMENT|default(0)|int %}
    {% if printer.mmu is defined and printer.mmu.enabled and EJECT_FILAMENT|int == 1  %}
        MMU_EJECT
     {% endif %}
    G91                            ; relative positioning 
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    {% if printer.toolhead.position.z < 250 %}
      G1 Z50 F3000                    ; move nozzle up 50mm
    {% else %}
      G1 Z2 F3000                    ; move nozzle up 2mm
    {% endif %}    
    M106 S64   ; set part fan to cool the ducts
    M118 Completed.
    # activate chamber fan to clear out fume
    SET_TEMPERATURE_FAN_TARGET temperature_fan="chamber" target=25
    M142 S35                        ; We've stopped printing. It's okay to set Controller fan to 35C 
    STATUS_READY

###########################################################################
[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
description: Pause the print and park
gcode:
    {% set vars = printer['gcode_macro _MMU_CLIENT_VARS'] %}

    {% if printer.pause_resume.is_paused %}
        RESPOND MSG="Print is already paused"
    {% else %}
        _RETRACT
        _MMU_SAVE_POSITION
        BASE_PAUSE
        _MMU_PARK
        {vars.user_pause_extension|default("")}
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
description: Resume the print
gcode:
    {% set vars = printer['gcode_macro _MMU_CLIENT_VARS'] %}

    {% if not printer.pause_resume.is_paused %}
        RESPOND MSG="Print is not paused. Resume ignored"
    {% else %}
        _MMU_RESTORE_POSITION
        {vars.user_resume_extension|default("")}
        _RETRACT
        BASE_RESUME
    {% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
description: Cancel print
gcode:
    M118 "Print Cancelled"
    PRINT_END

[gcode_macro _RETRACT]
description: Helper to retract filament in pause and cancel
gcode:
    {% set vars = printer['gcode_macro _MMU_CLIENT_VARS'] %}
    {% set length = params.LENGTH|default(vars.retract)|default(1.0)|float %}
    {% set speed = params.SPEED|default(vars.retract_speed)|default(1.0)|float %}

    _UNRETRACT LENGTH=-{length|abs} SPEED={speed}

[gcode_macro _UNRETRACT]
description: Helper to extruder filament in resume to undo retract
gcode:
    {% set vars = printer['gcode_macro _MMU_CLIENT_VARS'] %}
    {% set length = params.LENGTH|default(vars.unretract)|default(1.0)|float %}
    {% set speed = params.SPEED|default(vars.unretract_speed)|default(1.0)|float %}

    {% if printer.extruder.can_extrude %}
        M83 ; Extruder relative
        G1 E{length} F{speed|abs * 60}
    {% endif %}


    